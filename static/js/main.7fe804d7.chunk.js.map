{"version":3,"sources":["components/Header.js","pages/Home.js","App.js","util/CSV.js","util/Dates.js","EntityManager.js","index.js"],"names":["Component","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","key","EM","getQs","dtdcId","dvdcId","state","currentEvent","electionDates","map","ed","index","assign","color","id","className","holidays","holiday","onClose","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","main_esm","defaultView","height","header","left","center","right","buttonText","today","month","week","day","list","plugins","googleCalendarPlugin","dayGridPlugin","listPlugin","googleCalendarApiKey","eventSources","googleCalendarId","eventClick","info","jsEvent","preventDefault","event","extendedProps","description","location","reactstrap_es","isOpen","toggle","title","dangerouslySetInnerHTML","__html","onClick","App","withRouter","Home_Home","CSV","strData","strDelimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedValue","strMatchedDelimiter","length","push","replace","trim","outputArray","forEach","row","join","require","DateTime","Settings","defaultZoneName","Dates","isoCache","arbCache","arbCacheDayJs","DATETIME_MED","DATE_SHORT","MONTH_YEAR","year","epicMonthRange","now","local","fromISO","str","fromStr","format","fromFormat","fromMs","ms","fromMillis","toMonthYearStr","dt","toLocaleString","toGroupedStr","grouping","g","toLowerCase","quarter","isValidDateStr","isValid","isoToDateTime","_getArrayofMonthsInternal","begin","end","output","counter","plus","months","getArrayofMonths","epicBegin","startOf","epicEnd","beginIndex","endIndex","slice","currentMonthPlusYears","years","getMonthRangeFromMonthYearStrs","doRangesOverlap","b","c","d","EntityManager","qs","getQsParams","fetchStaticJson","holidaysRaw","keys","topKey","Array","prototype","apply","getHolidaysFromTopKey","static","bits","split","start1","parseInt","start2","start","toISODate","e","console","log","dynamic","url","options","fetch","then","response","json","catch","ex","text","responseText","query","window","search","substring","vars","i","pair","value","decodeURIComponent","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","init","ReactDOM","render","src_App","document","getElementById","stop"],"mappings":"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","file":"static/js/main.7fe804d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavItem } from 'reactstrap';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <Navbar className=\"mb-3 justify-content-between\" color=\"dark\" dark expand=\"lg\">\r\n                <NavLink className={\"navbar-brand \" + (this.props.domain ? 'small' : '')} to=\"/\">\r\n                    <h5 className=\"display\">Pike County Regional Democratic Event Calendar</h5>\r\n                </NavLink>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","/* global EM */\r\nimport React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport listPlugin from '@fullcalendar/list';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.key = EM.getQs('key');\r\n        this.dtdcId = \"9hsi23n792il4r2fpnk08kmnj8@group.calendar.google.com\";\r\n        this.dvdcId = \"88nt7fbcnbvdk7q5ojngskd2rc@group.calendar.google.com\";\r\n\r\n        this.state = {\r\n            currentEvent: null\r\n        };\r\n\r\n        this.electionDates = EM.electionDates.map((ed, index) => {\r\n            return Object.assign({}, ed, { color: '#d03b3b', id: 'e' + index, className: 'election' });\r\n        });\r\n\r\n        this.holidays = EM.holidays.map((holiday, index) => {\r\n            return Object.assign({}, holiday, { color: '#ccc', id: 'h' + index, className: 'holiday' });\r\n        });        \r\n\r\n        this.onClose = this.onClose.bind(this);\r\n    }\r\n\r\n    onClose() {\r\n        this.setState({ currentEvent: null });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key=\"contents\" className=\"page page-home container-fluid\">\r\n                <FullCalendar\r\n                    defaultView=\"listMonth\"\r\n                    height=\"parent\"\r\n                    header={{\r\n                        left: 'prev,next today',\r\n                        center: 'title',\r\n                        right: 'listMonth,dayGridMonth,dayGridWeek'\r\n                    }}\r\n                    buttonText={{\r\n                        today: 'Today',\r\n                        month: 'Month',\r\n                        week: 'Week',\r\n                        day: 'Day',\r\n                        list: 'List'\r\n                    }}\r\n                    plugins={[googleCalendarPlugin, dayGridPlugin, listPlugin]}\r\n                    googleCalendarApiKey={this.key}\r\n                    eventSources={[\r\n                        this.electionDates,\r\n                        this.holidays,\r\n                        {\r\n                            googleCalendarId: this.dtdcId,\r\n                            className: 'dtdc',\r\n                            id: 'dtdc',\r\n                            color: \"#f7c121\",                            \r\n                        },\r\n                        {\r\n                            googleCalendarId: this.dvdcId,\r\n                            className: 'dvdc',\r\n                            id: 'dvdc',\r\n                            color: \"#27aff3\",                            \r\n                        }\r\n                    ]}\r\n                    eventClick={(info) => {\r\n                        info.jsEvent.preventDefault();\r\n                        if (info.event.extendedProps){\r\n                            if (info.event.extendedProps.description || info.event.extendedProps.location)\r\n                                this.setState({ currentEvent: info.event });\r\n                        }\r\n                    }}\r\n                />\r\n                {this.state.currentEvent ? \r\n                    <Modal isOpen={this.state.currentEvent?true:false} toggle={this.onClose}>\r\n                        <ModalHeader toggle={this.toggle}>{this.state.currentEvent.title}</ModalHeader>\r\n                        <ModalBody>     \r\n                            <h5>Description:</h5>                      \r\n                            <div dangerouslySetInnerHTML={{ __html: this.state.currentEvent.extendedProps.description }} />\r\n                            <hr/>\r\n                            <h5>Location:</h5>\r\n                            <div dangerouslySetInnerHTML={{ __html: this.state.currentEvent.extendedProps.location }} />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={this.onClose}>Close</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Header from './components/Header';\nimport Home from './pages/Home';\n\nconst HomePage = withRouter(Home);\n\nclass App extends Component {\n    render() {\n        return (         \n            <div className={'page-container'}>\n                <Home {...this.props} />} />\n            </div>     \n        );\n    }\n}\n\nexport default App;\n","/* eslint no-cond-assign: 0 */\r\nimport saver from 'file-saver';\r\nimport _ from 'underscore';\r\n\r\nexport default {\r\n    save: (filename, data) => {\r\n        let csv_output = '';\r\n        _.each(data, function (row) {\r\n            let rowOutput = _.map(row, function (cell) {\r\n                if (typeof cell !== \"undefined\" && cell != null) {\r\n                    return cell.toString().replace(/\"/g, '\"\"');\r\n                } else {\r\n                    return '';\r\n                }\r\n            });\r\n            csv_output += '\"' + rowOutput.join('\",\"') + '\"\\n';\r\n        });\r\n\r\n        let newName = filename;\r\n        if (filename.slice(-4) !== '.csv'){\r\n            newName = filename + '.csv';\r\n        }\r\n        saver.saveAs(new Blob([csv_output], { type: \"text/csv\" }), newName);\r\n    },\r\n\r\n    fromString: (strData, strDelimiter) => {\r\n        // Check to see if the delimiter is defined. If not,\r\n        // then default to comma.\r\n        strDelimiter = (strDelimiter || \",\");\r\n\r\n        // Create a regular expression to parse the CSV values.\r\n        var objPattern = new RegExp(\r\n            (\r\n                // Delimiters.\r\n                \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n\r\n                // Quoted fields.\r\n                \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n\r\n                // Standard fields.\r\n                \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"\r\n            ),\r\n            \"gi\"\r\n        );\r\n\r\n        // Create an array to hold our data. Give the array\r\n        // a default empty first row.\r\n        var arrData = [[]];\r\n\r\n        // Create an array to hold our individual pattern\r\n        // matching groups.\r\n        var arrMatches = null;\r\n\r\n        // Keep looping over the regular expression matches\r\n        // until we can no longer find a match.\r\n        while (arrMatches = objPattern.exec(strData)) {\r\n\r\n            // Get the delimiter that was found.\r\n            var strMatchedDelimiter = arrMatches[1];\r\n\r\n            // Check to see if the given delimiter has a length\r\n            // (is not the start of string) and if it matches\r\n            // field delimiter. If id does not, then we know\r\n            // that this delimiter is a row delimiter.\r\n            if (\r\n                strMatchedDelimiter.length &&\r\n                strMatchedDelimiter !== strDelimiter\r\n            ) {\r\n\r\n                // Since we have reached a new row of data,\r\n                // add an empty row to our data array.\r\n                arrData.push([]);\r\n\r\n            }\r\n\r\n            var strMatchedValue;\r\n\r\n            // Now that we have our delimiter out of the way,\r\n            // let's check to see which kind of value we\r\n            // captured (quoted or unquoted).\r\n            if (arrMatches[2]) {\r\n                // We found a quoted value. When we capture\r\n                // this value, unescape any double quotes.\r\n                strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\r\n\r\n                if (strMatchedValue === 'undefined') {\r\n                    strMatchedValue = '';\r\n                }\r\n            } else {\r\n                // We found a non-quoted value.\r\n                strMatchedValue = arrMatches[3];\r\n            }\r\n\r\n            // Now that we have our value string, let's add\r\n            // it to the data array.\r\n            arrData[arrData.length - 1].push(strMatchedValue?strMatchedValue.trim():strMatchedValue);\r\n        }\r\n\r\n        //Remove blank rows\r\n        let outputArray = [];\r\n        arrData.forEach((row) => {\r\n            if (row.join('') === '')return;\r\n            outputArray.push(row);\r\n        });\r\n\r\n        // Return the parsed data.\r\n        return (outputArray);\r\n    },\r\n\r\n    asObjectArray(csv){\r\n        let header = csv[0];\r\n        let output = [];\r\n        csv.slice(1).forEach((row, rowIndex) => {\r\n            output.push(_.object(header, row));\r\n        });\r\n        return output;\r\n    }\r\n}\r\n","const { DateTime, Settings } = require(\"luxon\");\r\n\r\nSettings.defaultZoneName = \"utc\";\r\n\r\nconst Dates = {\r\n    isoCache: {},\r\n    arbCache: {},\r\n    arbCacheDayJs: {},\r\n    DATETIME_MED: DateTime.DATETIME_MED,\r\n    DATE_SHORT: 'L/d/y',\r\n    MONTH_YEAR: { month: 'long', year: 'numeric' },\r\n    epicMonthRange: null,\r\n    now: () =>{\r\n        return DateTime.local();\r\n    },\r\n    fromISO: (str) => {\r\n        if (!Dates.isoCache[str]){\r\n            Dates.isoCache[str] = DateTime.fromISO(str);\r\n        }\r\n        return Dates.isoCache[str];\r\n    },\r\n    fromStr: (str, format) => {\r\n        if (!Dates.arbCache[str]){\r\n            Dates.arbCache[str] = DateTime.fromFormat(str, format||Dates.DATE_SHORT);\r\n        }\r\n        return Dates.arbCache[str];\r\n    }, \r\n    fromMs: (ms) => {\r\n        return DateTime.fromMillis(ms);\r\n    },\r\n    toMonthYearStr(dt){\r\n        return dt.toLocaleString(Dates.MONTH_YEAR);\r\n    },\r\n    toGroupedStr(dt, grouping){\r\n        let g = grouping.toLowerCase();\r\n        if (g === 'year'){\r\n            return dt.year;\r\n        }else if (g === 'quarter'){\r\n            return 'Q' + dt.quarter + ' ' + dt.year;\r\n        }else{\r\n            return dt.toLocaleString(Dates.MONTH_YEAR);\r\n        }        \r\n    },    \r\n    isValidDateStr: (str) => {\r\n        let attempt = Dates.fromStr(str);\r\n        return attempt.isValid;\r\n    },\r\n    isoToDateTime: (str) => {\r\n        if (!str)return null;\r\n        return Dates.fromISO(str).toLocaleString(Dates.DATETIME_MED);\r\n    },\r\n    _getArrayofMonthsInternal(begin, end){\r\n        let output = [];\r\n        let counter = begin; \r\n        while (counter <= end) {\r\n            output.push(counter);\r\n            counter = counter.plus({ months: 1 });\r\n        }\r\n        return output;\r\n    },\r\n    getArrayofMonths(begin, end){\r\n        if (!Dates.epicMonthRange){\r\n            let epicBegin = Dates.fromStr('1/1/1970').startOf('month');\r\n            let epicEnd = Dates.fromStr('12/1/2100').startOf('month');\r\n            Dates.epicMonthRange = Dates._getArrayofMonthsInternal(epicBegin, epicEnd);\r\n        }\r\n\r\n        let beginIndex = ((begin.year - 1970) * 12) + begin.month - 1;\r\n        let endIndex = ((end.year - 1970) * 12) + end.month;   \r\n    \r\n        return Dates.epicMonthRange.slice(beginIndex, endIndex);\r\n    },    \r\n    currentMonthPlusYears(years){\r\n        let today = DateTime.local();\r\n        return [today, today.plus({ years: years })];\r\n    },\r\n    getMonthRangeFromMonthYearStrs(begin, end){\r\n        let output = [];\r\n        if (begin){\r\n            output[0] = Dates.fromStr(begin, 'L/y');\r\n        }else{\r\n            output[0] = DateTime.local().startOf('month');\r\n        }\r\n\r\n        if (end){\r\n            output[1] = Dates.fromStr(end, 'L/y');\r\n        }else{\r\n            output[1] = output[0].plus({ years: 3 });\r\n        }\r\n\r\n        return output;\r\n    },\r\n    doRangesOverlap(a, b, c, d){\r\n        return (a >= c && a <= d) || (b >= c && b <= d);\r\n    },\r\n    /*getOverlapInMonths(a, b, c, d){\r\n        if (Dates.doRangesOverlap(a, b, c, d)){\r\n            let val = null;\r\n            if (b >= d){\r\n                val = a.diff(d);\r\n            }else{\r\n                if (a > c && b < d){\r\n                    val = b.diff(a);\r\n                }else{\r\n                    val = b.diff(c);\r\n                }\r\n            }\r\n            return Math.round(Math.abs(val.as('months')) - .05); \r\n        }else{\r\n            return -1;\r\n        }\r\n    }*/\r\n};\r\n\r\nexport default Dates;","import CSV from './util/CSV';\r\nimport Dates from './util/Dates';\r\nconst { DateTime, Settings } = require(\"luxon\");\r\n\r\nexport default class EntityManager{ \r\n    constructor(){        \r\n    }\r\n\r\n    async init(){\r\n        this.qs = this.getQsParams();\r\n    \r\n        this.electionDates = await this.fetchStaticJson('data/election-dates.json');\r\n        this.holidaysRaw = await this.fetchStaticJson('data/holidays.json');\r\n        this.holidays = [];        \r\n        Object.keys(this.holidaysRaw).forEach(topKey => {\r\n            Array.prototype.push.apply(this.holidays, this.getHolidaysFromTopKey(topKey));\r\n        });\r\n    }\r\n\r\n    getHolidaysFromTopKey(topKey){\r\n        let output = [];\r\n        Object.keys(this.holidaysRaw[topKey].static).forEach(dt => {\r\n            try{\r\n                let bits = dt.split('/');\r\n                let start1 = DateTime.local(2019, parseInt(bits[0]), parseInt(bits[1]));\r\n                let start2 = DateTime.local(2020, parseInt(bits[0]), parseInt(bits[1]));\r\n                let title = this.holidaysRaw[topKey].static[dt];\r\n                output.push({\r\n                    start: start1.toISODate(),\r\n                    end: start1.toISODate(),\r\n                    title: title\r\n                });  \r\n                output.push({\r\n                    start: start2.toISODate(),\r\n                    end: start2.toISODate(),\r\n                    title: title\r\n                }); \r\n            }catch(e){\r\n                console.log(topKey, dt);\r\n            }           \r\n        });\r\n        Object.keys(this.holidaysRaw[topKey].dynamic).forEach(dt => {\r\n            try{\r\n                let bits = dt.split('/');\r\n                let start1 = DateTime.local(parseInt(bits[2]), parseInt(bits[0]), parseInt(bits[1]));\r\n                let title = this.holidaysRaw[topKey].dynamic[dt];\r\n                output.push({\r\n                    start: start1.toISODate(),\r\n                    end: start1.toISODate(),\r\n                    title: title\r\n                });\r\n            }catch(e){\r\n                console.log(topKey, dt);\r\n            }           \r\n        });        \r\n        return output;\r\n    }\r\n\r\n    async fetchStaticJson(url, options){   \r\n        return await fetch(url, options)\r\n            .then(response => {\r\n                return response.json()\r\n            })     \r\n            .catch(function (ex, b) {\r\n                console.log('Fetch Static Error:', ex);\r\n                throw ex;\r\n            });\r\n    } \r\n\r\n    async fetchStaticText(url, options){   \r\n        return await fetch(url, options)\r\n            .then(response => {            \r\n                return response.text();\r\n            })   \r\n            .then((responseText) => {\r\n                return CSV.fromString(responseText);                \r\n            })  \r\n            .catch(function (ex, b) {\r\n                console.log('Fetch Static Error:', ex);\r\n                throw ex;\r\n            });\r\n    }     \r\n\r\n    getQsParams() {\r\n        var query = window.location.search.substring(1);\r\n        var output = {};\r\n        if (query.length > 0){\r\n            var vars = query.split('&');\r\n            for (var i = 0; i < vars.length; i++) {\r\n                var pair = vars[i].split('=');\r\n                var value = pair[1] ? decodeURIComponent(pair[1]) : null;\r\n                output[decodeURIComponent(pair[0])] = value ? value : true;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n    \r\n    getQs(key){\r\n        if (this.qs[key]){\r\n            return this.qs[key];\r\n        }else{\r\n            return false;\r\n        }\r\n    }    \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport EntityManager from './EntityManager';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nimport './style/index.scss';\n\nwindow.EM = new EntityManager();\n(async function(){\n    await window.EM.init();\n    ReactDOM.render(<App />, document.getElementById('root'));\n})();\n"],"sourceRoot":""}